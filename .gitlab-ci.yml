# include:
#   - template: Code-Quality.gitlab-ci.yml

image: node:10-alpine

stages:
  # - lint
  # - build
  # - test
  - build_docker
  - deploy

# lint:
#   stage: lint
#   script:
#     - npm ci
#     - npm run lint

# build:
#   stage: build
#   script:
#     - npm install rimraf
#     - npm run build --if-present
#   cache:
#     policy: push
#     paths:
#       - node_modules/


# test:
#   stage: test
#   script:
#     - npm install jest
#     - npm test
#   coverage:
#     '/Statements.*?(\d+(?:\.\d+)?)%/'

build_docker:
  before_script:
    - docker info
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PWD 
    - docker build . --file Dockerfile --tag devops-test:$CI_COMMIT_SHA
    - docker push devops-test:$CI_COMMIT_SHA
    - docker tag devops-test:$CI_COMMIT_REF_NAME
    - docker push devops-test:$CI_COMMIT_REF_NAME

deploy:
  image: google/cloud-sdk:alpine
  stage: deploy
  script:
    - gcloud components install beta --quiet
    - gcloud components update
    - gcloud config set run/platform managed
    - gcloud config set run/region $GCLOUD_REGION
    - gcloud auth activate-service-account $GCLOUD_SERVICE_ACCOUNT --key-file=$GCLOUD_AUTH
    - gcloud beta run deploy $GCLOUD_APP_NAME --quiet --image registry.hub.docker.com/$DOCKER_USER/devops-test --allow-unauthenticated --update-env-vars DB_HOST=$DB_HOST,DB_PORT=$DB_POST,DB_USERNAME=$DB_USERNAME,DB_PASSWORD=$DB_PASSWORD,DB_NAME=$DB_NAME --project $GCLOUD_PROJECT
  environment:
    name: production
  only:
  - master