include:
  - template: Code-Quality.gitlab-ci.yml

image: node:10-alpine

stages:
  - lint
  - build
  - test
  - docker_build_push
  - deploy_staging
  - deploy_prod

lint:
  stage: lint
  script:
    - npm ci
    - npm run lint

build:
  stage: build
  script:
    - npm install rimraf
    - npm run build --if-present
  cache:
    policy: push
    paths:
      - node_modules/

test:
  stage: test
  script:
    - npm install jest
    - npm run test:cov
  coverage: '/Statements.*?(\d+(?:\.\d+)?)%/'

docker_build_push:
  stage: docker_build_push
  image: youdowell/gcloud-dind
  services:
    - docker:dind
  before_script:
    - docker info
    - gcloud components update
    - gcloud auth activate-service-account $GCLOUD_CONTAINER_REGISTRY_SA --key-file=$GCLOUD_CONTAINER_REGISTRY_SA_AUTH
    - gcloud auth configure-docker --quiet
  script:
    - docker build . --file Dockerfile --tag $REGISTRY/devops-test:$CI_COMMIT_SHA
    - docker push $REGISTRY/devops-test:$CI_COMMIT_SHA
    - docker tag $REGISTRY/devops-test:$CI_COMMIT_SHA $REGISTRY/devops-test
    - docker push $REGISTRY/devops-test
    - docker tag $REGISTRY/devops-test $REGISTRY/devops-test:$CI_COMMIT_REF_NAME
    - docker push $REGISTRY/devops-test:$CI_COMMIT_REF_NAME

deploy_staging:
  image: google/cloud-sdk:alpine
  stage: deploy_staging
  script:
    - gcloud components update
    - gcloud auth activate-service-account $GCLOUD_SERVICE_ACCOUNT --key-file=$GCLOUD_AUTH
    - gcloud config set run/platform managed
    - gcloud config set run/region $GCLOUD_REGION
    - gcloud run deploy $GCLOUD_APP_NAME --quiet --image $REGISTRY/devops-test:$CI_COMMIT_REF_NAME --allow-unauthenticated --update-env-vars DB_HOST=$DB_HOST,DB_PORT=$DB_PORT,DB_USERNAME=$DB_USERNAME,DB_PASSWORD=$DB_PASSWORD,DB_NAME=$DB_NAME --project $GCLOUD_PROJECT
  environment:
    name: staging
  only:
    - master

deploy_prod:
  image: google/cloud-sdk:alpine
  stage: deploy_prod
  script:
    - gcloud components update
    - gcloud auth activate-service-account $GCLOUD_SERVICE_ACCOUNT --key-file=$GCLOUD_AUTH
    - gcloud config set run/platform managed
    - gcloud config set run/region $GCLOUD_REGION
    - gcloud run deploy $GCLOUD_APP_NAME --quiet --image $REGISTRY/devops-test:$CI_COMMIT_REF_NAME --allow-unauthenticated --update-env-vars DB_HOST=$DB_HOST,DB_PORT=$DB_PORT,DB_USERNAME=$DB_USERNAME,DB_PASSWORD=$DB_PASSWORD,DB_NAME=$DB_NAME --project $GCLOUD_PROJECT
  when: manual
  environment:
    name: production
  only:
    - master
    - tags
